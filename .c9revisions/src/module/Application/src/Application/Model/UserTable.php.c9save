{"ts":1362265043203,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\nnamespace Application\\Model;\n\nuse Zend\\Db\\TableGateway\\TableGateway;\n\nclass UserTable\n{\n    protected $tableGateway;\n\n    public function __construct(TableGateway $tableGateway)\n    {\n        $this->tableGateway = $tableGateway;\n    }\n\n    public function fetchAll()\n    {\n        $resultSet = $this->tableGateway->select();\n        return $resultSet;\n    }\n\n    public function getUser($id)\n    {\n        $id  = (int) $id;\n        $rowset = $this->tableGateway->select(array('id' => $id));\n        $row = $rowset->current();\n        if (!$row) {\n            throw new \\Exception(\"Could not find row $id\");\n        }\n        return $row;\n    }\n\n    public function saveUser(User $user)\n    {\n        $data = array(\n            'email' => $user->email,\n            'password'  => $user->password,\n        );\n\n        $id = (int)$user->id;\n        if ($id == 0) {\n            $this->tableGateway->insert($data);\n        } else {\n            if ($this->getUser($id)) {\n                $this->tableGateway->update($data, array('id' => $id));\n            } else {\n                throw new \\Exception('Form id does not exist');\n            }\n        }\n    }\n\n    public function deleteUser($id)\n    {\n        $this->tableGateway->delete(array('id' => $id));\n    }\n}"]],"start1":0,"start2":0,"length1":0,"length2":1266}]],"length":1266}
{"contributors":[],"silentsave":false,"ts":1362286440162,"patch":[[{"diffs":[[0,"Gateway;"],[1,"\n    protected $cache;"],[0,"\n\n    pu"]],"start1":114,"start2":114,"length1":16,"length2":38},{"diffs":[[0," $row;\n    }"],[1,"\n    \n    public function getUserByEmail($email)\n    {\n        $email  = (string) $email;\n        $rowset = $this->tableGateway->select(array('email' => $email));\n        $row = $rowset->current();\n        if (!$row) {\n            throw new \\Exception(\"Could not find row $email\");\n        }\n        return $row;\n    }    "],[0,"\n\n    public"]],"start1":659,"start2":659,"length1":24,"length2":346},{"diffs":[[0,"on('"],[-1,"Form"],[1,"User"],[0," id "]],"start1":1443,"start2":1443,"length1":12,"length2":12}]],"length":1610,"saved":false}
{"ts":1362286444544,"patch":[[{"diffs":[[0,"d $cache"],[1," = array()"],[0,";\n\n    p"]],"start1":135,"start2":135,"length1":16,"length2":26}]],"length":1620,"saved":false}
{"ts":1362286524981,"patch":[[{"diffs":[[0," (int) $id;\n"],[1,"        if( !array_key_exists($id, $this->cache) ) {\n    "],[0,"        $row"]],"start1":450,"start2":450,"length1":24,"length2":81},{"diffs":[[0,"('id' => $id));\n"],[1,"    "],[0,"        $row = $"]],"start1":570,"start2":570,"length1":32,"length2":36},{"diffs":[[0,"rent();\n        "],[1,"    "],[0,"if (!$row) {\n   "]],"start1":617,"start2":617,"length1":32,"length2":36},{"diffs":[[0,"   if (!$row) {\n"],[1,"    "],[0,"            thro"]],"start1":634,"start2":634,"length1":32,"length2":36},{"diffs":[[0," row $id\");\n"],[1,"            }\n            $this->cache[$id] = $row;\n"],[0,"        }\n  "]],"start1":702,"start2":702,"length1":24,"length2":76}]],"length":1741,"saved":false}
{"ts":1362286537536,"patch":[[{"diffs":[[0,"    return $"],[-1,"row"],[1,"this->cache[$id]"],[0,";\n    }\n    "]],"start1":780,"start2":780,"length1":27,"length2":40}]],"length":1754,"saved":false}
