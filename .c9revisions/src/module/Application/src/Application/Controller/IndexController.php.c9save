{"ts":1362250728957,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n/**\n * Zend Framework (http://framework.zend.com/)\n *\n * @link      http://github.com/zendframework/ZendSkeletonApplication for the canonical source repository\n * @copyright Copyright (c) 2005-2012 Zend Technologies USA Inc. (http://www.zend.com)\n * @license   http://framework.zend.com/license/new-bsd New BSD License\n */\n\nnamespace Application\\Controller;\n\nuse Zend\\Mvc\\Controller\\AbstractActionController;\nuse Zend\\View\\Model\\ViewModel;\n\nclass IndexController extends AbstractActionController\n{\n    public function indexAction()\n    {\n        return new ViewModel();\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":584}]],"length":584}
{"contributors":[],"silentsave":false,"ts":1362255066988,"patch":[[{"diffs":[[0,"ewModel("],[1,"array(\n            'albums' => $this->getAlbumTable()->fetchAll(),\n        )"],[0,");\n    }"]],"start1":565,"start2":565,"length1":16,"length2":92}]],"length":660,"saved":false}
{"ts":1362255163651,"patch":[[{"diffs":[[0,"oller\n{\n"],[1,"    protected $postTable;\n    protected $userTable;\n    \n"],[0,"    publ"]],"start1":496,"start2":496,"length1":16,"length2":73},{"diffs":[[0,"   '"],[-1,"album"],[1,"post"],[0,"s' ="]],"start1":646,"start2":646,"length1":13,"length2":12},{"diffs":[[0,">get"],[-1,"AlbumTable()->fetchAll(),\n        ));\n    }"],[1,"PostTable()->fetchAll(),\n        ));\n    }\n    \n    public function getPostTable()\n    {\n        if (!$this->postTable) {\n            $sm = $this->getServiceLocator();\n            $this->postTable = $sm->get('Application\\Model\\PostTable');\n        }\n        return $this->postTable;\n    }\n    \n    public function getUserTable()\n    {\n        if (!$this->userTable) {\n            $sm = $this->getServiceLocator();\n            $this->userTable = $sm->get('Application\\Model\\UserTable');\n        }\n        return $this->userTable;\n    }     "],[0,"\n}\n"]],"start1":666,"start2":666,"length1":50,"length2":546}]],"length":1212,"saved":false}
{"ts":1362255494318,"patch":[[{"diffs":[[0,"xAction()\n    {\n"],[1,"        echo \"HERE\";\n"],[0,"        return n"]],"start1":585,"start2":585,"length1":32,"length2":53}]],"length":1233,"saved":false}
{"ts":1362255509656,"patch":[[{"diffs":[[0,"  {\n"],[-1,"        echo \"HERE\";\n"],[0,"    "]],"start1":597,"start2":597,"length1":29,"length2":8}]],"length":1212,"saved":false}
{"ts":1362255558822,"patch":[[{"diffs":[[0,"stTable()\n    {\n"],[1,"        echo \"HERE\";\n"],[0,"        if (!$th"]],"start1":743,"start2":743,"length1":32,"length2":53}]],"length":1233,"saved":false}
{"ts":1362255570149,"patch":[[{"diffs":[[0,"  {\n"],[-1,"        echo \"HERE\";\n"],[0,"    "]],"start1":755,"start2":755,"length1":29,"length2":8},{"diffs":[[0,"le');\n        }\n"],[1,"        echo \"HERE\";\n"],[0,"        return $"]],"start1":904,"start2":904,"length1":32,"length2":53}]],"length":1233,"saved":false}
{"ts":1362255576745,"patch":[[{"diffs":[[0,"  }\n"],[-1,"        echo \"HERE\";\n"],[0,"    "]],"start1":916,"start2":916,"length1":29,"length2":8}]],"length":1212,"saved":false}
{"ts":1362255579429,"patch":[[{"diffs":[[0,"rviceLocator();\n"],[1,"            echo \"HERE\";\n"],[0,"            $thi"]],"start1":822,"start2":822,"length1":32,"length2":57}]],"length":1237,"saved":false}
{"ts":1362255585730,"patch":[[{"diffs":[[0,"();\n"],[-1,"            echo \"HERE\";\n"],[0,"    "]],"start1":834,"start2":834,"length1":33,"length2":8}]],"length":1212,"saved":false}
{"ts":1362255588939,"patch":[[{"diffs":[[0,"el\\PostTable');\n"],[1,"            echo \"HERE2\";\n"],[0,"        }\n      "]],"start1":894,"start2":894,"length1":32,"length2":58}]],"length":1238,"saved":false}
{"ts":1362255597323,"patch":[[{"diffs":[[0,"');\n"],[-1,"            echo \"HERE2\";\n"],[0,"    "]],"start1":906,"start2":906,"length1":34,"length2":8}]],"length":1212,"saved":false}
{"ts":1362255648622,"patch":[[{"diffs":[[0,"le');\n        }\n"],[1,"        echo \"HERE2\";\n"],[0,"        return $"]],"start1":904,"start2":904,"length1":32,"length2":54}]],"length":1234,"saved":false}
{"ts":1362256847099,"patch":[[{"diffs":[[0,"  }\n"],[-1,"        echo \"HERE2\";\n"],[0,"    "]],"start1":916,"start2":916,"length1":30,"length2":8}]],"length":1212,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362262457016,"patch":[[{"diffs":[[0," ));\n    }\n    \n"],[1,"    public function loginAction() {\n        return new ViewModel();\n    }\n    \n"],[0,"    public funct"]],"start1":702,"start2":702,"length1":32,"length2":111}]],"length":1291,"saved":false}
{"ts":1362262538822,"patch":[[{"diffs":[[0,"ion() {\n        "],[-1,"return"],[1,"$view ="],[0," new ViewModel()"]],"start1":746,"start2":746,"length1":38,"length2":39},{"diffs":[[0,"iewModel();\n"],[1,"        return $view;\n"],[0,"    }\n    \n "]],"start1":775,"start2":775,"length1":24,"length2":46}]],"length":1314,"saved":false}
{"ts":1362262548835,"patch":[[{"diffs":[[0,"xAction()\n    {\n"],[1,"        return $this->loginAction();\n"],[0,"        return n"]],"start1":585,"start2":585,"length1":32,"length2":69}]],"length":1351,"saved":false}
{"ts":1362262569352,"patch":[[{"diffs":[[0,"iewModel();\n"],[1,"        $view->setTemplate('login');\n"],[0,"        retu"]],"start1":812,"start2":812,"length1":24,"length2":61}]],"length":1388,"saved":false}
{"ts":1362262630361,"patch":[[{"diffs":[[0,"    "],[-1,"$view = new ViewModel();\n        $view->setTemplate('login');\n        return $view;"],[1,"return $this->_helper->viewRenderer('showOther'); "],[0,"\n   "]],"start1":795,"start2":795,"length1":91,"length2":58}]],"length":1355,"saved":false}
{"ts":1362262650749,"patch":[[{"diffs":[[0,"Action()"],[-1,"\n   "],[0," {\n     "]],"start1":586,"start2":586,"length1":20,"length2":16}]],"length":1351,"saved":false}
{"ts":1362262735195,"patch":[[{"diffs":[[0,"on indexAction()"],[1,"\n   "],[0," {\n        retur"]],"start1":578,"start2":578,"length1":32,"length2":36},{"diffs":[[0,"    "],[-1,"return $this->_helper->viewRenderer('showOther'); "],[1,"$view = new ViewModel();\n        return $view;"],[0,"\n   "]],"start1":795,"start2":795,"length1":58,"length2":54}]],"length":1351,"saved":false}
{"ts":1362262870991,"patch":[[{"diffs":[[0,"    "],[-1,"return $this->loginAction();"],[1,"$this->_redirect('/login');\n        "],[0,"\n   "]],"start1":605,"start2":605,"length1":36,"length2":44}]],"length":1359,"saved":false}
{"ts":1362262950835,"patch":[[{"diffs":[[0,">_re"],[-1,"direct"],[1,"quest->setActionName"],[0,"('"],[-1,"/"],[0,"logi"]],"start1":615,"start2":615,"length1":17,"length2":30}]],"length":1372,"saved":false}
{"ts":1362262958940,"patch":[[{"diffs":[[0,"e('login');\n"],[1,"        return loginAction();\n"],[0,"        \n   "]],"start1":638,"start2":638,"length1":24,"length2":54}]],"length":1402,"saved":false}
{"ts":1362262974544,"patch":[[{"diffs":[[0,"nAction() {\n"],[1,"        echo \"here\";\n"],[0,"        $vie"]],"start1":830,"start2":830,"length1":24,"length2":45}]],"length":1423,"saved":false}
{"ts":1362262983619,"patch":[[{"diffs":[[0,"  {\n        "],[1,"//"],[0,"$this->_requ"]],"start1":597,"start2":597,"length1":24,"length2":26}]],"length":1425,"saved":false}
{"ts":1362263002498,"patch":[[{"diffs":[[0," return "],[1,"$this->"],[0,"loginAct"]],"start1":659,"start2":659,"length1":16,"length2":23}]],"length":1432,"saved":false}
{"ts":1362263014524,"patch":[[{"diffs":[[0,"        "],[-1,"//"],[0,"$this->_"]],"start1":601,"start2":601,"length1":18,"length2":16}]],"length":1430,"saved":false}
{"ts":1362263038416,"patch":[[{"diffs":[[0,"    "],[-1,"$view ="],[1,"return"],[0," new"]],"start1":874,"start2":874,"length1":15,"length2":14},{"diffs":[[0,"();\n"],[-1,"        return $view;\n"],[0,"    "]],"start1":898,"start2":898,"length1":30,"length2":8}]],"length":1407,"saved":false}
{"ts":1362263083229,"patch":[[{"diffs":[[0,"\"here\";\n        "],[1,"//"],[0,"return new ViewM"]],"start1":862,"start2":862,"length1":32,"length2":34}]],"length":1409,"saved":false}
{"ts":1362263088127,"patch":[[{"diffs":[[0,"e('login');\n"],[1,"        echo \"here1\";\n"],[0,"        retu"]],"start1":638,"start2":638,"length1":24,"length2":46}]],"length":1431,"saved":false}
{"ts":1362263181299,"patch":[[{"diffs":[[0,"here1\";\n        "],[1,"//"],[0,"return $this->lo"]],"start1":664,"start2":664,"length1":32,"length2":34}]],"length":1433,"saved":false}
{"ts":1362263198237,"patch":[[{"diffs":[[0,"   \n"],[-1,"    public function loginAction() {\n        echo \"here\";\n        //return new ViewModel();\n    }\n    \n"],[0,"    "]],"start1":833,"start2":833,"length1":110,"length2":8}]],"length":1331,"saved":false}
{"ts":1362263247217,"patch":[[{"diffs":[[0,"xAction()\n    {\n"],[1,"        $this->_request->setControllerName('user');\n"],[0,"        $this->_"]],"start1":585,"start2":585,"length1":32,"length2":84}]],"length":1383,"saved":false}
{"ts":1362263262245,"patch":[[{"diffs":[[0,")\n    {\n        "],[1,"//"],[0,"$this->_request-"]],"start1":593,"start2":593,"length1":32,"length2":34},{"diffs":[[0,"');\n        "],[1,"//"],[0,"$this->_requ"]],"start1":651,"start2":651,"length1":24,"length2":26}]],"length":1387,"saved":false}
{"ts":1362263286893,"patch":[[{"diffs":[[0,"');\n"],[-1,"        echo \"here1\";\n"],[0,"    "]],"start1":702,"start2":702,"length1":30,"length2":8}]],"length":1365,"saved":false}
{"contributors":[],"silentsave":true,"ts":1362342197213,"patch":[[{"diffs":[[0,"ewModel;"],[1,"\nuse Zend\\Session\\Container; "],[0,"\n\nclass "]],"start1":437,"start2":437,"length1":16,"length2":45},{"diffs":[[0," $postTable;"],[1," "],[0,"\n    protect"]],"start1":546,"start2":546,"length1":24,"length2":25},{"diffs":[[0,"$userTable;\n"],[1,"    protected $followerTable;\n"],[0,"    \n    pub"]],"start1":574,"start2":574,"length1":24,"length2":54},{"diffs":[[0,"    "],[-1,"//"],[1,"$session = new Container('user');\n        \n        if(!$session->user_id) {\n            "],[0,"$this->"],[-1,"_"],[0,"re"],[-1,"quest->setControllerName('user');\n        //$this->_reque"],[1,"direct()->toRoute('login');\n        }\n        \n        $user = $this->getUserTable()->getUser($session->user_id);\n        $posts = array();\n        $following = array();\n        $notFollowing = array();\n        \n        foreach($this->getPostTable()->fetchAllByUser($user) as $post) {\n            $post->user = $user;\n            $posts[$post->id] = $post;\n        }        \n        \n        foreach($this->getPostTable()->fetchAllFromFollowedUsers($user) as $post) {\n            $po"],[0,"st->"],[1,"u"],[0,"se"],[-1,"tActionName('login');\n        //return $this->loginAction();"],[1,"r = $this->getUserTable()->getUser($post->user_id);\n            $posts[$post->id] = $post;\n        }\n        \n        arsort($posts);\n                \n        foreach($this->getFollowerTable()->fetchAllFollowed($user) as $followed_user) {\n            $following[] = $this->getUserTable()->getUser($followed_user->user_id);\n        }\n        \n        foreach($this->getFollowerTable()->fetchAllNotFollowed($user) as $not_followed_user) {\n            $notFollowing[] = $this->getUserTable()->getUser($not_followed_user->user_id);\n        }        "],[0,"\n   "]],"start1":665,"start2":665,"length1":143,"length2":1140},{"diffs":[[0,"sts'"],[1,"   "],[0," => $"],[-1,"this->getPostTable()->fetchAll(),\n        ));\n    }\n"],[1,"posts,\n            'following'=> $following,\n            'notFollowing'=>$notFollowing,\n            'username' => $user->email,\n            'gravatar' => $user->gravatarID\n        ));\n    }\n    \n    public function loginAction() \n    {\n        $email = $this->getRequest()->getPost('email');\n        $password = $this->getRequest()->getPost('password');\n                \n        if(!$email) {\n            return new ViewModel();\n        } else {\n            $user = $this->getUserTable()->getUserByEmail($email);\n            if( $user->password != $password ){\n                return new ViewModel(array(\n                   'error' => 'Invalid login, please try again' \n                ));\n            }\n            $session = new Container('user');\n            $session->user_id = $user->id;\n            $this->redirect()->toRoute('application');\n        }\n    }    \n            "],[0,"    "]],"start1":1862,"start2":1862,"length1":65,"length2":896},{"diffs":[[0,"able;\n    } "],[-1,""],[0,""],[1,"\n    \n    public function getFollowerTable()\n    {\n        if (!$this->followerTable) {\n            $sm = $this->getServiceLocator();\n            $this->followerTable = $sm->get('Application\\Model\\FollowerTable');\n        }\n        return $this->followerTable;\n    }"],[0,"    \n}\n"]],"start1":3234,"start2":3234,"length1":19,"length2":285}]],"length":3519,"saved":false}
{"contributors":[],"silentsave":false,"ts":1362352357015,"patch":[[{"diffs":[[0,"stTable;"],[-1," "],[0,"\n    pro"]],"start1":550,"start2":550,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"        \n        foreach($this->getFollowerTable()->fetchAllFollowed($user) as $followed_user) {\n            $following[] = $this->getUserTable()->getUser($followed_user->user_id);\n        }\n        \n        foreach($this->getFollowerTable()->fetchAllNotFollowed($user) as $not_followed_user) {\n            $notFollowing[] = $this->getUserTable()->getUser($not_followed_user->user_id)"],[1,"$session->last_post_retrived = (isset($posts[0])) ? $posts[0]->id : null"],[0,";\n  "]],"start1":1393,"start2":1393,"length1":392,"length2":80},{"diffs":[[0,"ll;\n        "],[-1,"}"],[0,"        "],[-1,"\n "],[0,"       \n    "]],"start1":1467,"start2":1467,"length1":35,"length2":32},{"diffs":[[0," 'posts'"],[1,"     "],[0,"    => $"]],"start1":1542,"start2":1542,"length1":16,"length2":21},{"diffs":[[0,"ing'"],[-1,"=> $following,\n            'notFollowing'=>$notFollowing"],[1,"     => $this->getUserTable()->fetchAllFollowedBy($user),\n            'notFollowing'  => $this->getUserTable()->fetchAllNotFollowedBy($user)"],[0,",\n  "]],"start1":1589,"start2":1589,"length1":64,"length2":148},{"diffs":[[0,"sername'"],[1,"     "],[0," => $use"]],"start1":1749,"start2":1749,"length1":16,"length2":21},{"diffs":[[0,"ravatar'"],[1,"     "],[0," => $use"]],"start1":1794,"start2":1794,"length1":16,"length2":21}]],"length":3302,"saved":false}
{"ts":1362352361992,"patch":[[{"diffs":[[0,"d : "],[-1,"null"],[1,"0"],[0,";\n  "]],"start1":1461,"start2":1461,"length1":12,"length2":9}]],"length":3299,"saved":false}
{"ts":1362352603599,"patch":[[{"diffs":[[0,"    "],[-1,"$post->user = $this->getUserTable()->getUser($post->user_id);\n            $posts[$post->id] = $post;"],[0,"\n   "]],"start1":1241,"start2":1241,"length1":108,"length2":8}]],"length":3199,"saved":false}
{"ts":1362352818390,"patch":[[{"diffs":[[0,") {\n            "],[1,"$post->user = $this->getUserTable()->getUser($post->user_id);\n            $posts[$post->id] = $post;"],[0,"\n        }\n     "]],"start1":1229,"start2":1229,"length1":32,"length2":132}]],"length":3299,"saved":false}
